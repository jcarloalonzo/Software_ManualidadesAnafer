
package Proyecto;

import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
 
/**
 *
 * @author COCO
 */
public class FrmRegistroPedido extends javax.swing.JFrame {

    /**
     * Creates new form FrmRegistroPedido
     */
    public FrmRegistroPedido() {
        initComponents();
        this.setTitle("SISTEMA DE REGISTRO DE PRODUCTOS");
         this.setLocationRelativeTo(null);
        Cargar();
        CargarDni();
        CargarCategoria();
        CargarNombre();
        CargarTipo();
         getContentPane().setBackground(new java.awt.Color(255,255,255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEliminar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        cboDni = new javax.swing.JComboBox<>();
        cboCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cboCategoria = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnCategoria = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cboTipo = new javax.swing.JComboBox<>();
        btnTipo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboNombre = new javax.swing.JComboBox<>();
        btnNombre = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnHabilitados = new javax.swing.JButton();
        btnDeshabilitados = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Eliminar.png"))); // NOI18N
        btnEliminar.setMnemonic('e');
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 230, -1, -1));

        btnAtras.setBackground(new java.awt.Color(153, 255, 102));
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Atras.png"))); // NOI18N
        btnAtras.setMnemonic('r');
        btnAtras.setText("Atras");
        btnAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAtrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAtrasMouseExited(evt);
            }
        });
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 518, -1, -1));

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 313, 1200, 172));

        jPanel4.setBackground(new java.awt.Color(255, 0, 0));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("MANUALIDADES ANAFER");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(435, 435, 435)
                .addComponent(jLabel16)
                .addContainerGap(550, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, -1));

        cboDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDniActionPerformed(evt);
            }
        });
        getContentPane().add(cboDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 130, -1));

        cboCliente.setText("CONSULTAR");
        cboCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClienteActionPerformed(evt);
            }
        });
        getContentPane().add(cboCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 110, -1));

        jLabel1.setText("CONSULTAR POR DNI CLIENTE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        getContentPane().add(cboCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 130, -1));

        jLabel3.setText("POR CATEGORIA DEL PEDIDO");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        btnCategoria.setText("CONSULTAR");
        btnCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 110, -1));

        jLabel4.setText("POR TIPO DE PEDIDO");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        getContentPane().add(cboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 130, -1));

        btnTipo.setText("CONSULTAR");
        btnTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoActionPerformed(evt);
            }
        });
        getContentPane().add(btnTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, 110, -1));

        jLabel2.setText("POR NOMBRE PEDIDO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        getContentPane().add(cboNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 130, -1));

        btnNombre.setText("CONSULTAR");
        btnNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNombreActionPerformed(evt);
            }
        });
        getContentPane().add(btnNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 110, -1));

        jButton1.setText("DESHABILITAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 250, -1, -1));

        jButton2.setText("HABILITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 250, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("REGISTRO DE PEDIDOS");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 300, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("MOSTRAR ");

        btnHabilitados.setText("HABILITADOS");
        btnHabilitados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabilitadosActionPerformed(evt);
            }
        });

        btnDeshabilitados.setText("DESHABILITADOS");
        btnDeshabilitados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshabilitadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnHabilitados)
                        .addGap(11, 11, 11)
                        .addComponent(btnDeshabilitados))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHabilitados))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnDeshabilitados)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 310, 70));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ayuda.png"))); // NOI18N
        jMenuItem1.setText("Ayuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SETTNG1.png"))); // NOI18N
        jMenu3.setText("Configuracion");

        jMenuItem2.setText("Usuario");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenu1.add(jMenu3);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/candado.png"))); // NOI18N
        jMenuItem3.setText("Cerrar Sesion");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sal.png"))); // NOI18N
        jMenuItem13.setText("Salir");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ver");

        jMenuItem4.setText("Clientes");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Catalogo Materiales");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Almacenes");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Stock");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Pedidos");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setText("Materiales Para Pedido");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    Eliminar();
    Cargar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
              this.dispose();
        FrmGestionPedido formularioGestionPedido=new FrmGestionPedido();
        formularioGestionPedido.setVisible(true);
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAtrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseEntered
  
    }//GEN-LAST:event_btnAtrasMouseEntered

    private void btnAtrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseExited
      
    }//GEN-LAST:event_btnAtrasMouseExited

    private void cboDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDniActionPerformed

    private void cboClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClienteActionPerformed
        CargarPorDni();
    }//GEN-LAST:event_cboClienteActionPerformed

    private void btnCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriaActionPerformed
       CargarPorCategoria();
    }//GEN-LAST:event_btnCategoriaActionPerformed

    private void btnTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoActionPerformed
       CargarPorTipo();
    }//GEN-LAST:event_btnTipoActionPerformed

    private void btnNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNombreActionPerformed
       CargarPorNombre();
    }//GEN-LAST:event_btnNombreActionPerformed

    private void btnHabilitadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabilitadosActionPerformed
       Cargar();
    }//GEN-LAST:event_btnHabilitadosActionPerformed

    private void btnDeshabilitadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshabilitadosActionPerformed
       CargarDeshabilitado();
    }//GEN-LAST:event_btnDeshabilitadosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String codigo=JOptionPane.showInputDialog(null,"Ingrese el codigo de registro a eliminar: ");
       
        String sentenciaSQL="update pedido set est_ped='DESHABILITADO' WHERE COD_PED='"+codigo+"'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
        Cargar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String codigo=JOptionPane.showInputDialog(null,"Ingrese el codigo de registro a eliminar: ");
       
        String sentenciaSQL="update pedido set est_ped='HABILITADO' WHERE COD_PED='"+codigo+"'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
        Cargar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        FrmAyuda ayuda=new FrmAyuda();
        ayuda.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
        FrmConfiguracion i=new FrmConfiguracion();
        i.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
        FrmLoggin formularioLoggin=new FrmLoggin();
        formularioLoggin.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        int resp=JOptionPane.showConfirmDialog(null,"¿Esta Seguro?");
        if(resp==0){
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        FrmLibretaClientes f=new FrmLibretaClientes();
        f.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        FrmVistaMaterial v=new FrmVistaMaterial();
        v.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        FrmVistaAlmacen a=new FrmVistaAlmacen();
        a.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        FrmVistaStock z=new FrmVistaStock();
        z.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        FrmVistaPedido x=new FrmVistaPedido();
        x.setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        FrmVistaPedidoCatalogo h =new  FrmVistaPedidoCatalogo();
        h.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed
    
    private void CargarPorTipo(){
        
    {
          String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select  cod_PED AS CODIGO,NOM_PED AS NOMBRE,CAN_PED AS CANTIDAD,CAT_PED AS CATEGORIA,TIP_PED AS TIPO,FEC_PED AS FECHA,PRE_PED AS PRECIO,EST_PED AS ESTADO,DNI_CLI AS DNI_CLIENTE from pedido WHERE tip_ped='"+cboTipo.getSelectedItem()+"' AND EST_PED='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
             JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
    }
    } 
    private void CargarPorCategoria(){
        
    {
            String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select  cod_PED AS CODIGO,NOM_PED AS NOMBRE,CAN_PED AS CANTIDAD,CAT_PED AS CATEGORIA,TIP_PED AS TIPO,FEC_PED AS FECHA,PRE_PED AS PRECIO,EST_PED AS ESTADO,DNI_CLI AS DNI_CLIENTE from pedido WHERE cat_ped='"+cboCategoria.getSelectedItem()+"' AND EST_PED='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
             JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
    }
    } 
     
    private void CargarPorNombre(){
        
    {
          String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select  cod_PED AS CODIGO,NOM_PED AS NOMBRE,CAN_PED AS CANTIDAD,CAT_PED AS CATEGORIA,TIP_PED AS TIPO,FEC_PED AS FECHA,PRE_PED AS PRECIO,EST_PED AS ESTADO,DNI_CLI AS DNI_CLIENTE from pedido WHERE NOM_PED='"+cboNombre.getSelectedItem()+"' AND EST_PED='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());  
        }
    }
    }
    private void CargarPorDni(){
        
    {
          String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select  cod_PED AS CODIGO,NOM_PED AS NOMBRE,CAN_PED AS CANTIDAD,CAT_PED AS CATEGORIA,TIP_PED AS TIPO,FEC_PED AS FECHA,PRE_PED AS PRECIO,EST_PED AS ESTADO,DNI_CLI AS DNI_CLIENTE from pedido WHERE EST_PED='HABILITADO' AND DNI_CLI="+cboDni.getSelectedItem();
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
    }
    }
   
    private void CargarDeshabilitado()
    {
           String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select  cod_PED AS CODIGO,NOM_PED AS NOMBRE,CAN_PED AS CANTIDAD,CAT_PED AS CATEGORIA,TIP_PED AS TIPO,FEC_PED AS FECHA,PRE_PED AS PRECIO,EST_PED AS ESTADO,DNI_CLI AS DNI_CLIENTE from pedido WHERE EST_PED='DESHABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
    }
    private void Cargar()
    {
           String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select cod_PED AS CODIGO,NOM_PED AS NOMBRE,CAN_PED AS CANTIDAD,CAT_PED AS CATEGORIA,TIP_PED AS TIPO,FEC_PED AS FECHA,PRE_PED AS PRECIO,EST_PED AS ESTADO,DNI_CLI AS DNI_CLIENTE from pedido WHERE EST_PED='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
             JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
    }
     private void CargarDni()
    {
           String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select DNI_CLI from CLIENTE ";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
                      while(miResultSet.next()){
                cboDni.addItem(miResultSet.getString("DNI_CLI"));
            }
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());  
        }
    }
       private void CargarCategoria()
    {  
        String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select distinct cat_ped from pedido";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
                      while(miResultSet.next()){
                cboCategoria.addItem(miResultSet.getString("cat_ped"));
            }
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());  
        }
    }
         private void CargarTipo()
    {
            String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select distinct TIP_ped from pedido";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
                      while(miResultSet.next()){
                cboTipo.addItem(miResultSet.getString("tip_ped"));
            }
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());  
        }
    }
      private void CargarNombre()
    {
            String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select  NOM_ped from pedido ";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
                      while(miResultSet.next()){
                cboNombre.addItem(miResultSet.getString("NOM_ped"));
            }
        }
        catch(SQLException e)
        {
              JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());   
        }
    }
    private void Eliminar()
    {
            String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String codigo=JOptionPane.showInputDialog(null,"Ingrese el codigo de registro a eliminar: ");
       
        String sentenciaSQL="DELETE FROM pedido  WHERE COD_PED='"+codigo+"'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
        }
        catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, "Error encontrado : "+e.getMessage());
        }
        Cargar();
    }   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistroPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnCategoria;
    private javax.swing.JButton btnDeshabilitados;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnHabilitados;
    private javax.swing.JButton btnNombre;
    private javax.swing.JButton btnTipo;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JButton cboCliente;
    private javax.swing.JComboBox<String> cboDni;
    private javax.swing.JComboBox<String> cboNombre;
    private javax.swing.JComboBox<String> cboTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable tblTabla;
    // End of variables declaration//GEN-END:variables
}
