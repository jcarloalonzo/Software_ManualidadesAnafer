/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author COCO
 */
public class FrmLibretaClientes extends javax.swing.JFrame {

    /**
     * Creates new form FrmLibretaClientes
     */
    public FrmLibretaClientes() {
        initComponents();
        this.setTitle("SISTEMA DE REGISTRO DE PEDIDOS");
        this.setLocationRelativeTo(null);
        Cargar();
        CargarDni();
        CargarNombre();
        getContentPane().setBackground(new java.awt.Color(255,255,255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        btnTodo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboNombre = new javax.swing.JComboBox<>();
        btnNombre = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboDni = new javax.swing.JComboBox<>();
        btnDni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTabla);

        btnSalir.setBackground(new java.awt.Color(153, 255, 102));
        btnSalir.setText("X");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 0, 0));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("MANUALIDADES ANAFER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(238, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(127, 127, 127))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel14)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        btnTodo.setText("CONSULTAR TODO");
        btnTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("LIBRETA DE CLIENTES");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("NOMBRE");

        btnNombre.setText("CONSULTAR POR NOMBRE");
        btnNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNombreActionPerformed(evt);
            }
        });

        jLabel2.setText("DNI");

        btnDni.setText("CONSULTAR POR DNI");
        btnDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDni)
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(90, 90, 90))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(cboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboDni, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNombre)
                    .addComponent(btnDni))
                .addGap(0, 47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnTodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnTodo)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(btnSalir))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void CargarNombre()
    {
           String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select DISTINCT NOM_CLI from CLIENTE WHERE EST_CLI='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
                      while(miResultSet.next()){
                cboNombre.addItem(miResultSet.getString("nom_CLI"));
            }
        }
        catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
     private void CargarDni()
    {
            String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521;
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select DISTINCT DNI_CLI from CLIENTE WHERE EST_CLI='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
                      while(miResultSet.next()){
                cboDni.addItem(miResultSet.getString("DNI_CLI"));
            }
        }
        catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());  
        }
    }
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
     this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodoActionPerformed
     Cargar();
    }//GEN-LAST:event_btnTodoActionPerformed

    private void btnNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNombreActionPerformed
      CargarPorNombre();
    }//GEN-LAST:event_btnNombreActionPerformed

    private void btnDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDniActionPerformed
        CargarPorDni();
    }//GEN-LAST:event_btnDniActionPerformed
   
    private void CargarPorNombre(){
            String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521; 
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select DNI_CLI AS DNI,NOM_CLI AS NOMBRE,APE_CLI AS APELLIDO,TEL_CLI AS TELEFONO from cliente WHERE NOM_CLI='"+cboNombre.getSelectedItem()+"' AND EST_CLI='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
          JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    private void CargarPorDni(){
           String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521; 
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select DNI_CLI AS DNI,NOM_CLI AS NOMBRE,APE_CLI AS APELLIDO,TEL_CLI AS TELEFONO from cliente WHERE DNI_CLI='"+cboDni.getSelectedItem()+"' AND EST_CLI='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
       private void Cargar()
    {
         String usuario="system";
    String password="oracle";
    String ssid="bbdd01";
    String host="localhost";
        int puerto=1521; 
        String cadenaConexion;
        cadenaConexion="jdbc:oracle:thin:@"+host+":"+puerto+":"+ssid;
        String sentenciaSQL="select DNI_CLI AS DNI,NOM_CLI AS NOMBRE,APE_CLI AS APELLIDO,TEL_CLI AS TELEFONO from cliente WHERE EST_CLI='HABILITADO'";
        
        try(
               Connection miConexion=DriverManager.getConnection(cadenaConexion,usuario,password);
                Statement miSentencia=miConexion.createStatement();
                ResultSet miResultSet=miSentencia.executeQuery(sentenciaSQL);
                )
        {
            Vector miListaDeCampos=new Vector();
            int numeroDeCampos;
            ResultSetMetaData miMetaData;
            miMetaData=miResultSet.getMetaData();
            numeroDeCampos=miMetaData.getColumnCount();
            
            for(int i=0;i<miMetaData.getColumnCount();i++){
               miListaDeCampos.add(miMetaData.getColumnName(i+1));
            }
            DefaultTableModel miDefaultTableModel=new DefaultTableModel(miListaDeCampos,0);
            int cont=0;
            while(miResultSet.next())
            {
                cont++;
                Object[] miRenglon=new Object[numeroDeCampos];
                for(int i=0;i<numeroDeCampos;i++)
                {
                miRenglon[i]=miResultSet.getObject(i+1);    
                }
                miDefaultTableModel.addRow(miRenglon);
            }
            tblTabla.setModel(miDefaultTableModel);
        }
        catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage()); 
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLibretaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLibretaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLibretaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLibretaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmLibretaClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDni;
    private javax.swing.JButton btnNombre;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnTodo;
    private javax.swing.JComboBox<String> cboDni;
    private javax.swing.JComboBox<String> cboNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTabla;
    // End of variables declaration//GEN-END:variables
}
